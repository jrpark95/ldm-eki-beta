# LDM-EKI v1.0 안전기술보고서 마스터 작업 계획

## 개요
이 문서는 4개의 병렬 AI 에이전트가 협력하여 LDM-EKI v1.0 안전기술보고서를 작성하기 위한 마스터 계획입니다.

## 프로젝트 정보
- **프로젝트**: LDM-EKI (Lagrangian Dispersion Model with Ensemble Kalman Inversion)
- **목적**: 방사능 오염원 역추정 시스템의 실용화 및 배포 준비
- **작업 위치**: `/home/jrpark/ldm-eki-release.v.beta/`
- **참조 위치**: `/home/jrpark/ldm-eki-release.v1.0/`
- **Git 브랜치**: main (fix/hot-nonrdc-invalid-symbol-nan)

## 에이전트 작업 분배

### Agent #1: 시스템 안정화 전문가
- **작업 파일**: `에이전트_작업지시서_1_시스템안정화.txt`
- **산출물**: `시스템_안정화_보고서.txt`
- **예상 분량**: 1,200줄 이상
- **주요 작업**:
  - 코드 리팩토링 과정 분석
  - GPU/메모리 안정성 개선 문서화
  - 빌드 시스템 최적화
  - IPC 통신 안정화

### Agent #2: 사용성 개선 전문가
- **작업 파일**: `에이전트_작업지시서_2_사용성개선.txt`
- **산출물**: `사용성_개선_보고서.txt`
- **예상 분량**: 2,000줄 이상
- **주요 작업**:
  - 설정 파일 현대화 분석
  - 입력 검증 시스템 문서화
  - 터미널 출력 개선
  - 자동화 기능 설명

### Agent #3: 알고리즘 검증 전문가
- **작업 파일**: `에이전트_작업지시서_3_알고리즘검증.txt`
- **산출물**: `알고리즘_검증_보고서.txt`
- **예상 분량**: 2,500줄 이상
- **주요 작업**:
  - EKI 알고리즘 구현 분석
  - 16가지 조합 테스트 결과
  - LOCALIZED 옵션 검증
  - 수렴 특성 분석

### Agent #4: 시각화/후처리 전문가
- **작업 파일**: `에이전트_작업지시서_4_시각화후처리.txt`
- **산출물**: `시각화_후처리_도구_보고서.txt`
- **예상 분량**: 3,000줄 이상
- **주요 작업**:
  - 모든 util/*.py 도구 분석
  - VTK 시각화 시스템
  - 디버깅 도구 문서화
  - 자동화 파이프라인

### Agent #5: IPC 통신 시스템 전문가
- **작업 파일**: `에이전트_작업지시서_5_IPC통신.txt`
- **산출물**: `IPC_통신_시스템_보고서.txt`
- **예상 분량**: 3,500줄 이상
- **주요 작업**:
  - POSIX 공유 메모리 구현 분석
  - C++ Writer/Reader 클래스 문서화
  - Python IPC 모듈 분석
  - 데이터 마샬링/동기화 메커니즘
  - Row-major/Column-major 변환
  - 프로토콜 명세 및 에러 처리

## 병렬 작업 지침

### 1. 작업 시작 전 필수 확인
```bash
# 작업 디렉토리 확인
cd /home/jrpark/ldm-eki-release.v.beta/

# Git 상태 확인
git status
git log --oneline -10

# 파일 구조 확인
ls -la src/
ls -la util/
ls -la input/
ls -la docs/
```

### 2. 각 에이전트별 독립 작업
- 각 에이전트는 할당된 지시서만 참고
- 다른 에이전트의 작업과 중복 없이 진행
- 자신의 전문 분야에 집중

### 3. 코드 읽기 규칙
- **완전성**: 지정된 파일의 전체 내용을 빠짐없이 읽기
- **정확성**: 함수명, 변수명, 주석 모두 정확히 기록
- **연결성**: 파일 간 호출 관계 파악

### 4. 보고서 작성 규칙
- **언어**: 한국어
- **형식**: 기술 보고서 (섹션 번호, 제목, 부제목)
- **코드 포함**: 중요 코드는 전체 인용
- **정량적 지표**: 숫자, 통계, 측정값 포함
- **Before/After**: 개선 전후 비교 필수

## 공통 참조 자료

### Git 커밋 히스토리 분석 명령어
```bash
# 전체 커밋 로그
git log --oneline --all

# 특정 키워드 검색
git log --grep="refactor" --oneline
git log --grep="fix" --oneline
git log --grep="optimize" --oneline
git log --grep="improve" --oneline
git log --grep="modernize" --oneline

# 파일별 변경 이력
git log -p --follow [파일명]

# 통계 정보
git diff --stat HEAD~10
```

### 주요 문서 위치
```
# 현재 버전 (v.beta)
/home/jrpark/ldm-eki-release.v.beta/CLAUDE.md
/home/jrpark/ldm-eki-release.v.beta/LOCALIZED_DISABLED.md

# v1.0 참조 문서
/home/jrpark/ldm-eki-release.v1.0/docs/CODE_MODERNIZATION_PLAN.md
/home/jrpark/ldm-eki-release.v1.0/docs/INPUT_MODERNIZATION_PLAN.md
/home/jrpark/ldm-eki-release.v1.0/docs/MODERNIZATION_COMPLETE.md
/home/jrpark/ldm-eki-release.v1.0/docs/KERNEL_ERROR_COLLECTOR.md
/home/jrpark/ldm-eki-release.v1.0/docs/FIX_REPORT_*.md
/home/jrpark/ldm-eki-release.v1.0/docs/PHASE4_CUDA_KERNELS_DOCUMENTATION.md
/home/jrpark/ldm-eki-release.v1.0/docs/PYTHON_DOCUMENTATION_SUMMARY.md
```

## 품질 검증 체크리스트

### 각 보고서별 필수 포함 사항
- [ ] 개요 및 배경
- [ ] 상세 기술 분석
- [ ] 코드 예제 (전체 함수 포함)
- [ ] Before/After 비교
- [ ] 정량적 성과 지표
- [ ] 문제점과 해결 방법
- [ ] 교훈 및 권장사항

### 완전성 검증
- [ ] 지시서에 명시된 모든 파일 분석됨
- [ ] 모든 함수와 클래스 문서화됨
- [ ] Git 커밋 히스토리 반영됨
- [ ] 참조 문서 내용 반영됨

### 기술적 정확성
- [ ] 코드 인용 정확함
- [ ] 기술 용어 올바름
- [ ] 수치 데이터 검증됨
- [ ] 알고리즘 설명 정확함

## 최종 통합 계획

### 1단계: 병렬 작성 (5개 에이전트 동시)
- 각 에이전트가 독립적으로 보고서 작성
- 예상 소요 시간: 각 에이전트별 2-3시간

### 2단계: 품질 검토
- 각 보고서별 완전성 확인
- 중복 내용 확인 및 조정
- 참조 일관성 확인

### 3단계: 최종 통합
- 5개 보고서를 하나의 패키지로 구성
- 목차 및 색인 생성
- 최종 검토

## 예상 최종 산출물

### 파일 구조
```
docs/
├── 안전기술보고서_작성계획서.txt (완료)
├── 에이전트_작업지시서_1_시스템안정화.txt (완료)
├── 에이전트_작업지시서_2_사용성개선.txt (완료)
├── 에이전트_작업지시서_3_알고리즘검증.txt (완료)
├── 에이전트_작업지시서_4_시각화후처리.txt (완료)
├── 에이전트_작업지시서_5_IPC통신.txt (완료)
├── 안전기술보고서_마스터_작업계획.txt (본 문서)
│
└── [최종 산출물]
    ├── 시스템_안정화_보고서.txt (1,200+ 줄)
    ├── 사용성_개선_보고서.txt (2,000+ 줄)
    ├── 알고리즘_검증_보고서.txt (2,500+ 줄)
    ├── 시각화_후처리_도구_보고서.txt (3,000+ 줄)
    └── IPC_통신_시스템_보고서.txt (3,500+ 줄)
```

### 총 예상 분량
- 보고서 5개: 약 12,200줄 이상
- 상세 기술 문서: 세계 최고 수준의 완성도
- 언어: 한국어
- 형식: 기술 보고서

## 작업 시작 명령

각 에이전트는 다음 명령으로 작업을 시작하세요:

```bash
# Agent 1
cat docs/에이전트_작업지시서_1_시스템안정화.txt
# 지시에 따라 시스템_안정화_보고서.txt 작성

# Agent 2
cat docs/에이전트_작업지시서_2_사용성개선.txt
# 지시에 따라 사용성_개선_보고서.txt 작성

# Agent 3
cat docs/에이전트_작업지시서_3_알고리즘검증.txt
# 지시에 따라 알고리즘_검증_보고서.txt 작성

# Agent 4
cat docs/에이전트_작업지시서_4_시각화후처리.txt
# 지시에 따라 시각화_후처리_도구_보고서.txt 작성

# Agent 5
cat docs/에이전트_작업지시서_5_IPC통신.txt
# 지시에 따라 IPC_통신_시스템_보고서.txt 작성
```

## 주의사항

⚠️ **중요**:
1. 모든 코드를 빠짐없이 읽고 분석하세요
2. 추측이나 가정 없이 실제 코드 기반으로 작성하세요
3. 불확실한 부분은 명시적으로 표시하세요
4. 파일을 찾을 수 없으면 대체 경로를 확인하세요

---
작성일: 2025-10-18
작성자: AI Assistant (Claude)
버전: v1.0